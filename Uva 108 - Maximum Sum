#include <bits/stdc++.h>
using namespace std;

#define LL           long long
#define ULL          unsigned long long
#define P(x)         push(x)
#define mod          1000000007
#define read()       freopen("in.txt","r",stdin)
#define write()      freopen("out.txt","w",stdout)
#define clr(x)       memset(x,0,sizeof(x))
#define cln(x)       memset(x,-1,sizeof(x))
#define PB(x)        push_back(x)
#define MP(x,y)      make_pair(x,y)
#define F            first
#define S            second
#define lim          101
#define size_        33333333
#define __clr(x,m,n) memset(x, 0, sizeof(x[0][0]) * m * n);


int Ar[lim][lim];
int cumAr[lim][lim];
vector<int> v;
int idx;

int main()
{
    //ios::sync_with_stdio(false);
    /*read();
    write();*/
    int n;
    while (cin >> n)
    {
        v.clear();
        __clr(cumAr, n, n); __clr(Ar, n, n);
        for (int i = 1; i <= n; i++)
        {
            for (int j = 1; j <= n; j++)
            {
                cin >> Ar[i][j];
            }
        }
        for (int i = 1; i <= n; i++)
        {
            int prev = 0;
            for (int j = 1; j <= n; j++)
            {

                prev = Ar[i][j] + prev;
                cumAr[i][j] = prev;
            }
        }
        for (int i = 1; i <= n; i++)
        {
            for (int j = 1; j <= n; j++)
            {
                for (int k = 1; k <= n - i + 1; k++)
                {
                    int en = k + i - 1;
                    for (int l = 1; l <= n - j + 1; l++)
                    {
                        int end = l + j - 1;
                        int sum = 0;
                        for (int m = k; m <= en; m++)
                        {
                            sum += cumAr[m][end] - cumAr[m][end - j];
                        }
                        v.PB(sum);
                    }
                }
            }
        }
        int mx = -1270000;
        for (int i = 0; i < v.size(); i++) mx = max(mx, v[i]);
        cout << mx << endl;
    }
    return 0;
}
